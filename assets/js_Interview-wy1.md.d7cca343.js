import{o as n,c as s,b as a}from"./app.f15b287e.js";const p='{"title":"","description":"","frontmatter":{},"relativePath":"js/Interview-wy1.md","lastUpdated":1639749407961}',t={},o=[a('<ol><li>EvenLoop理解</li></ol><div class="language-javascript"><pre><code>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>\n         <span class="token keyword">let</span>  p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">333</span><span class="token punctuation">)</span>\n                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n         <span class="token punctuation">}</span><span class="token punctuation">)</span>\n         p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">444</span><span class="token punctuation">)</span>\n         <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="2"><li><p>Dom事件冒泡和捕获</p></li><li><p>事件代理</p></li><li><p>节流</p></li><li><p>数组去重</p><div class="language-javascript"><pre><code> <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>name<span class="token operator">:</span><span class="token string">&#39;sss&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>name<span class="token operator">:</span><span class="token string">&#39;sss&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span><span class="token string">&#39;sss&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token comment">//1. 指定key</span>\n<span class="token comment">// let hash = {}</span>\n<span class="token comment">// let result = arr.reduce((pre,curr) =&gt; {</span>\n<span class="token comment">//     if(!hash[curr.id]) {</span>\n<span class="token comment">//         hash[curr.id] = true</span>\n<span class="token comment">//         pre.push(curr)</span>\n<span class="token comment">//     }</span>\n<span class="token comment">//     return pre</span>\n<span class="token comment">// },[])</span>\n<span class="token comment">// console.loh(result)</span>\n\n\n<span class="token comment">// 2. 不指定key</span>\n<span class="token comment">// let wkMap = new Map()</span>\n\n<span class="token comment">// let result  = arr.reduce((pre,curr) =&gt; {</span>\n\n<span class="token comment">//         if(!wkMap.has(curr)){</span>\n<span class="token comment">//                pre.push(curr)</span>\n<span class="token comment">//                wkMap.set(curr)</span>\n<span class="token comment">//         }</span>\n     \n<span class="token comment">//         return pre</span>\n\n<span class="token comment">// },[])</span>\n\n<span class="token comment">// console.log(result)</span>\n\n\n<span class="token comment">// 3. </span>\n<span class="token comment">// let hash = {}</span>\n<span class="token comment">// let result = []</span>\n<span class="token comment">// for(let i = 0; i &lt; arr.length; i++) {</span>\n<span class="token comment">//   const item = arr[i]</span>\n<span class="token comment">//   const key = JSON.stringify(item)</span>\n<span class="token comment">//   // 顺序不同不行</span>\n<span class="token comment">//   if(!hash[key]) {</span>\n<span class="token comment">//      result.push(item)</span>\n<span class="token comment">//      hash[key] = true </span>\n<span class="token comment">//   }</span>\n\n<span class="token comment">// }</span>\n<span class="token comment">// console.log(result)</span>\n</code></pre></div></li><li><p>this指向</p><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">MyNew</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n    <span class="token comment">// this</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyNew</span><span class="token punctuation">(</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>PureComponent</p><div class="language-javascript"><pre><code><span class="token comment">// Class PureComponent  原理 shouldComponetUpdate（preState,preProps）{ return false }</span>\n<span class="token comment">// function memo  -&gt;  preProps ,preProps</span>\n<span class="token comment">// function(props) {</span>\n         \n<span class="token comment">// }</span>\n\n<span class="token comment">// 父传子参数</span>\n<span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span>setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">Bar</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 函数</span>\n<span class="token comment">//     useCallback  </span>\n<span class="token comment">//     props.xxx() =&gt; [{li:xxx},{li:xxx},{li:xxx}]</span>\n\n<span class="token comment">// dom的变化</span>\n\n<span class="token comment">//     useMemo</span>\n<span class="token comment">//     props.xxx  =&gt;  [{li:xxx},{li:xxx},{li:xxxx}]</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>函数组件和类组件区别</p></li></ol>',3)];t.render=function(a,p,t,e,c,l){return n(),s("div",null,o)};export{p as __pageData,t as default};
