import{o as l,c as e,b as i}from"./app.37666d6b.js";const p='{"title":"性能优化","description":"","frontmatter":{},"headers":[{"level":3,"title":"性能优化","slug":"性能优化"}],"relativePath":"js/Performance1.md","lastUpdated":1640183382406}',a={},r=[i('<h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-hidden="true">#</a></h3><ol><li><p>减少垃圾回收</p><div class="language-"><pre><code>不用的对象及时置null\n清空数组的时候不但要赋值给空数组，同时将数组的长度赋值为0\n函数的优化：在循环或者函数内部的函数可以提取到外面\n</code></pre></div></li><li><p>减少内存泄漏</p><div class="language-"><pre><code>意外的全局变量\n被遗忘的计时器或回调函数\n脱离DOM的引用\n闭包\n</code></pre></div></li><li><p>CDN</p></li><li><p>图片的选择</p></li><li><p>懒加载和预加载</p></li><li><p>样式的优化避免重载和重绘</p></li><li><p>Webpack打包的优化</p></li><li><p>防抖和节流</p></li><li><p>打包静态文件开启压缩</p></li><li><p>浏览器缓存-强缓存和协商缓存</p></li><li><p>预计算和计算缓存 提前计算-记住上次的结果</p></li><li><p>React组件的优化 PureComponent和memo，hook中的useCallback和useMemo</p></li><li><p>浏览器的web worker模仿多线程计算</p></li></ol>',2)];a.render=function(i,p,a,n,o,d){return l(),e("div",null,r)};export{p as __pageData,a as default};
