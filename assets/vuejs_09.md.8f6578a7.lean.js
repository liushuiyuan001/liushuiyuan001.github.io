import{o as n,c as s,a,d as t}from"./app.3fe4aed4.js";const o='{"title":"简单diff算法","description":"","frontmatter":{},"headers":[{"level":2,"title":"9.1 减少DOM操作的性能开销","slug":"_9-1-减少dom操作的性能开销"},{"level":2,"title":"9.2 DOM复用与key的作用","slug":"_9-2-dom复用与key的作用"},{"level":2,"title":"9.3 找到需要移动的元素","slug":"_9-3-找到需要移动的元素"},{"level":2,"title":"9.4 如何移动元素","slug":"_9-4-如何移动元素"},{"level":2,"title":"9.5 添加新元素","slug":"_9-5-添加新元素"},{"level":2,"title":"9.6 删除不存在的元素","slug":"_9-6-删除不存在的元素"}],"relativePath":"vuejs/09.md","lastUpdated":1662271199191}',e={},p=[a("h1",{id:"简单diff算法",tabindex:"-1"},[t("简单diff算法 "),a("a",{class:"header-anchor",href:"#简单diff算法","aria-hidden":"true"},"#")],-1),a("h2",{id:"_9-1-减少dom操作的性能开销",tabindex:"-1"},[t("9.1 减少DOM操作的性能开销 "),a("a",{class:"header-anchor",href:"#_9-1-减少dom操作的性能开销","aria-hidden":"true"},"#")],-1),a("p",null,"当新旧子节点都为数组的时候。需要进行核心diff算法，最暴力的当然是将全部旧子节点卸载，新节点挂载上。",-1),a("p",null,"当然还有大家可以简单想到的办法就是将新旧子节点数组的共同长度做patch，然后进行考虑新节点新增与删除的情况。",-1),a("p",null,"例如以下新旧节点",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// 旧vnode"),t("\n"),a("span",{class:"token keyword"},"const"),t(" oldVNode "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"{"),t("\n  type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'div'"),a("span",{class:"token punctuation"},","),t("\n  children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token punctuation"},"["),t("\n    "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'1'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n    "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'2'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n    "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'3'"),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"]"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token comment"},"// 新vnode"),t("\n"),a("span",{class:"token keyword"},"const"),t(" newVNode "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"{"),t("\n  type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'div'"),a("span",{class:"token punctuation"},","),t("\n  children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token punctuation"},"["),t("\n    "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'4'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n    "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'5'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n    "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'6'"),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"]"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),a("p",null,"diff算法如下",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\nn1: 旧节点\nn2: 新节点\ncontainer: 真实dom\n*/"),t("\n"),a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"pathChildren"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("n1"),a("span",{class:"token punctuation"},","),t(" n2"),a("span",{class:"token punctuation"},","),t(" container")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" oldChildren "),a("span",{class:"token operator"},"="),t(" n1"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"const"),t(" newChildren "),a("span",{class:"token operator"},"="),t(" n2"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token comment"},"// 新旧子节点都为数组的情况"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" oldLen "),a("span",{class:"token operator"},"="),t(" oldChildren"),a("span",{class:"token punctuation"},"."),t("length\n  "),a("span",{class:"token keyword"},"const"),t(" newLen "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"."),t("length\n  "),a("span",{class:"token keyword"},"const"),t(" commonLen "),a("span",{class:"token operator"},"="),t(" Math"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"min"),a("span",{class:"token punctuation"},"("),t("oldLen"),a("span",{class:"token punctuation"},","),t(" newLen"),a("span",{class:"token punctuation"},")"),t("\n  "),a("span",{class:"token keyword"},"for"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" commonLen"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token function"},"path"),a("span",{class:"token punctuation"},"("),t("oldChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t("newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},")"),t("\n  "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("newLen "),a("span",{class:"token operator"},">"),t(" oldLen"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"for"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(" commonLen"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" newLen"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n      "),a("span",{class:"token function"},"path"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},","),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(" container"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("oldLen "),a("span",{class:"token operator"},">"),t(" newLen"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"for"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(" commonLEn"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" oldLen"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n      "),a("span",{class:"token function"},"unmount"),a("span",{class:"token punctuation"},"("),t("oldChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),a("h2",{id:"_9-2-dom复用与key的作用",tabindex:"-1"},[t("9.2 DOM复用与key的作用 "),a("a",{class:"header-anchor",href:"#_9-2-dom复用与key的作用","aria-hidden":"true"},"#")],-1),a("p",null,"以上考虑的是没有新子节点没有移动的情况，加入有移动的情况的情况，则以上简单的算法不能满足，比如",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// oldChildren"),t("\n"),a("span",{class:"token punctuation"},"["),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'1'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'2'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'3'"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"]"),t("\n"),a("span",{class:"token comment"},"// newChildren"),t("\n"),a("span",{class:"token punctuation"},"["),t("\n  "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'3'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n  "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'1'"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n  "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'2'"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"]"),t("\n")])])],-1),a("p",null,"如果考虑了移动的情况，则根据type类型是否相同判断是否需要更新则满足不了需求（之前根据type相同则进行patch，否则卸载旧节点，挂载新节点）。加入key后新旧子节点如下。",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// oldChildren"),t("\n"),a("span",{class:"token punctuation"},"["),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'1'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'2'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'3'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"]"),t("\n"),a("span",{class:"token comment"},"// newChildren"),t("\n"),a("span",{class:"token punctuation"},"["),t("\n  "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'333'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n  "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'111'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n  "),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'222'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"]"),t("\n")])])],-1),a("p",null,"这样通过遍历新节点数组，找出在旧节点数组中相同的key进行patch",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"patchChildren"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("n1"),a("span",{class:"token punctuation"},","),t(" n2"),a("span",{class:"token punctuation"},","),t(" container")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" oldChildren "),a("span",{class:"token operator"},"="),t(" n1"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"const"),t(" newChildren "),a("span",{class:"token operator"},"="),t(" n2"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" newChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" newVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" oldChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t("j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n      "),a("span",{class:"token keyword"},"const"),t(" oldVNode "),a("span",{class:"token operator"},"="),t(" oldChildren"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t("\n      "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("newVNode"),a("span",{class:"token punctuation"},"."),t("key "),a("span",{class:"token operator"},"==="),t(" oldVNode"),a("span",{class:"token punctuation"},"."),t("key"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token function"},"patch"),a("span",{class:"token punctuation"},"("),t("oldVNode"),a("span",{class:"token punctuation"},","),t("newVNode"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"break"),a("span",{class:"token punctuation"},";"),t("\n      "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),a("p",null,"经过上面patch之后旧的oldChildren已变为",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token punctuation"},"["),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'111'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'222'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n"),a("span",{class:"token punctuation"},"{"),t("type"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'p'"),a("span",{class:"token punctuation"},","),t(" children"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'333'"),a("span",{class:"token punctuation"},","),t(" key"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"]"),t("\n")])])],-1),a("p",null,"但是此时oldChildren对应的位置还没有更新。此时，需要进行移动操作",-1),a("h2",{id:"_9-3-找到需要移动的元素",tabindex:"-1"},[t("9.3 找到需要移动的元素 "),a("a",{class:"header-anchor",href:"#_9-3-找到需要移动的元素","aria-hidden":"true"},"#")],-1),a("p",null,"怎么找到移动的元素？",-1),a("p",null,"简单观察即可知道当新旧节点key值相等的时候，并且新旧节点的下标相同的时候不需要更新。并且新节点的下标是递增的，则不需要移动。",-1),a("p",null,"接下来考虑：假如有移动的情况呢？则可以想到出现不是递增的话就会出现移动的情况，但怎样判断？只需要定义一个变量，记录当key相同时，新vnode在旧vnode中位置的出现最大的下标位置即可。如果当前位置小于最大的下标位置则认为需要移动。如下图",-1),a("p",null,[a("img",{src:"/assets/9.3.1.98de1cee.png",alt:"9.3.1"})],-1),a("ol",null,[a("li",null,"p-3 新节点对应旧子节点下标为2，此时最大下标为初始值0，大于初始值，则不进行移动同时最大下标更新为2"),a("li",null,"p-1 新节点对应旧子节点下标为0，此时最大下标为2，小于最大下标，需要移动"),a("li",null,"p-2 新节点对应旧子节点下标为1，此时最大下标为2，小于最大下标，需要移动")],-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"patchChildren"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("n1"),a("span",{class:"token punctuation"},","),t(" n2"),a("span",{class:"token punctuation"},","),t(" container")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" oldChildren "),a("span",{class:"token operator"},"="),t(" n1"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"const"),t(" newChildren "),a("span",{class:"token operator"},"="),t(" n2"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"let"),t(" maxIndex "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n  "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" newChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" newVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" oldChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t("j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n      "),a("span",{class:"token keyword"},"const"),t(" oldVNode "),a("span",{class:"token operator"},"="),t(" oldChildren"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t("\n      "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("newVNode"),a("span",{class:"token punctuation"},"."),t("key "),a("span",{class:"token operator"},"==="),t(" oldVNode"),a("span",{class:"token punctuation"},"."),t("key"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token function"},"patch"),a("span",{class:"token punctuation"},"("),t("oldVNode"),a("span",{class:"token punctuation"},","),t("newVNode"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("j "),a("span",{class:"token operator"},"<"),t(" maxIndex"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n          "),a("span",{class:"token comment"},"// 需要移动"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n          maxIndex "),a("span",{class:"token operator"},"="),t(" j\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token keyword"},"break"),a("span",{class:"token punctuation"},";"),t("\n      "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),a("h2",{id:"_9-4-如何移动元素",tabindex:"-1"},[t("9.4 如何移动元素 "),a("a",{class:"header-anchor",href:"#_9-4-如何移动元素","aria-hidden":"true"},"#")],-1),a("p",null,"移动的话其实根据就是将旧dom根据新节点的位置移动到新子节点的后面。",-1),a("p",null,"就是遍历新节点，然后移动旧节点即可，在上面代码基础上增加移动操作。",-1),a("p",null,"其中真实dom是存在VNode的el字段中",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"patchChildren"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("n1"),a("span",{class:"token punctuation"},","),t(" n2"),a("span",{class:"token punctuation"},","),t(" container")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" oldChildren "),a("span",{class:"token operator"},"="),t(" n1"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"const"),t(" newChildren "),a("span",{class:"token operator"},"="),t(" n2"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"let"),t(" maxIndex "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n  "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" newChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" newVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" oldChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t("j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n      "),a("span",{class:"token keyword"},"const"),t(" oldVNode "),a("span",{class:"token operator"},"="),t(" oldChildren"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t("\n      "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("newVNode"),a("span",{class:"token punctuation"},"."),t("key "),a("span",{class:"token operator"},"==="),t(" oldVNode"),a("span",{class:"token punctuation"},"."),t("key"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token function"},"patch"),a("span",{class:"token punctuation"},"("),t("oldVNode"),a("span",{class:"token punctuation"},","),t("newVNode"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("j "),a("span",{class:"token operator"},"<"),t(" maxIndex"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n          "),a("span",{class:"token comment"},"// 需要移动"),t("\n          "),a("span",{class:"token comment"},"// 9.4 找到新子节点的前一个节点"),t("\n          "),a("span",{class:"token keyword"},"const"),t(" preVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),t("\n          "),a("span",{class:"token comment"},"// 如果前一个节点为真才需要移动，否则的话就是第一个节点，不需要移动"),t("\n          "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("preVNode"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token comment"},"// 获取前一个节点的下一个兄弟节点作为锚点"),t("\n            "),a("span",{class:"token keyword"},"const"),t(" anchor "),a("span",{class:"token operator"},"="),t(" preVNode"),a("span",{class:"token punctuation"},"."),t("el"),a("span",{class:"token punctuation"},"."),t("nextSibling\n            "),a("span",{class:"token comment"},"// 调用dom的insert方法"),t("\n            "),a("span",{class:"token function"},"insert"),a("span",{class:"token punctuation"},"("),t("newVNode"),a("span",{class:"token punctuation"},"."),t("el"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},","),t(" anchor"),a("span",{class:"token punctuation"},")"),t("\n          "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n          maxIndex "),a("span",{class:"token operator"},"="),t(" j\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token keyword"},"break"),a("span",{class:"token punctuation"},";"),t("\n      "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),a("h2",{id:"_9-5-添加新元素",tabindex:"-1"},[t("9.5 添加新元素 "),a("a",{class:"header-anchor",href:"#_9-5-添加新元素","aria-hidden":"true"},"#")],-1),a("p",null,"假如新节点中有新增的情况，需要进行挂载，因为只需要增加一个布尔变量表示新子节点在旧子节点中是否找到即可。没找到挂载就行。",-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// 在第一个for循环内定义变量 let find = false。在第二个for循环内找到相同的key话 find = true"),t("\n"),a("span",{class:"token comment"},"// 在第二个for循环后面增加新增情况"),t("\n"),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("find"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token comment"},"// 找到前一个节点"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" preVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),t("\n  "),a("span",{class:"token keyword"},"let"),t(" anchor "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"null"),t("\n  "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("preVNode"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    anchor "),a("span",{class:"token operator"},"="),t(" preVNode"),a("span",{class:"token punctuation"},"."),t("el"),a("span",{class:"token punctuation"},"."),t("nextSibling\n  "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n    anchor "),a("span",{class:"token operator"},"="),t(" container"),a("span",{class:"token punctuation"},"."),t("firstChild\n  "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token comment"},"// 挂载 newVNode"),t("\n  "),a("span",{class:"token function"},"patch"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},","),t(" newVNode"),a("span",{class:"token punctuation"},","),t(" caontainer"),a("span",{class:"token punctuation"},","),t(" anchor"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),a("h2",{id:"_9-6-删除不存在的元素",tabindex:"-1"},[t("9.6 删除不存在的元素 "),a("a",{class:"header-anchor",href:"#_9-6-删除不存在的元素","aria-hidden":"true"},"#")],-1),a("p",null,"因为是通过遍历新节点数组来找旧节点数组中对应的节点，因为以上代码会漏掉不存在的旧节点。",-1),a("ol",null,[a("li",null,[a("p",null,"可以通过再次遍历旧节点数组，看是否在新节点数组中存在，如果在新节点数组中没有存在说明需要删除。")]),a("li",null,[a("p",null,"因为此前已经双重遍历过了，也可定义一个set将所有旧节点放在set中，如果在新节点找到了就删除掉，剩下没有被删除的就是在新节点中不存在需要删除的节点。代码如下。")])],-1),a("div",{class:"language-javascript"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"patchChildren"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("n1"),a("span",{class:"token punctuation"},","),t(" n2"),a("span",{class:"token punctuation"},","),t(" container")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"const"),t(" oldChildren "),a("span",{class:"token operator"},"="),t(" n1"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"const"),t(" newChildren "),a("span",{class:"token operator"},"="),t(" n2"),a("span",{class:"token punctuation"},"."),t("children\n  "),a("span",{class:"token keyword"},"let"),t(" maxIndex "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n  "),a("span",{class:"token keyword"},"let"),t(" oldChildrenSet "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Set"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n  "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" newChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" newVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" oldChildren"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t("j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n      "),a("span",{class:"token keyword"},"const"),t(" oldVNode "),a("span",{class:"token operator"},"="),t(" oldChildren"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t("\n      "),a("span",{class:"token comment"},"// 只用第一轮中将所有的旧节点添加到set中即可"),t("\n      "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("i "),a("span",{class:"token operator"},"==="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        oldChildrenSet"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"add"),a("span",{class:"token punctuation"},"("),t("oldVNode"),a("span",{class:"token punctuation"},")"),t("\n      "),a("span",{class:"token punctuation"},"}"),t("\n      "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("newVNode"),a("span",{class:"token punctuation"},"."),t("key "),a("span",{class:"token operator"},"==="),t(" oldVNode"),a("span",{class:"token punctuation"},"."),t("key"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// 将旧节点从set中删除"),t("\n        oldChildrenSet"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"delete"),a("span",{class:"token punctuation"},"("),t("oldVNode"),a("span",{class:"token punctuation"},")"),t("\n        \n        "),a("span",{class:"token function"},"patch"),a("span",{class:"token punctuation"},"("),t("oldVNode"),a("span",{class:"token punctuation"},","),t("newVNode"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("j "),a("span",{class:"token operator"},"<"),t(" maxIndex"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n          "),a("span",{class:"token comment"},"// 需要移动"),t("\n          "),a("span",{class:"token comment"},"// 9.4 找到新子节点的前一个节点"),t("\n          "),a("span",{class:"token keyword"},"const"),t(" preVNode "),a("span",{class:"token operator"},"="),t(" newChildren"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),t("\n          "),a("span",{class:"token comment"},"// 如果前一个节点为真才需要移动，否则的话就是第一个节点，不需要移动"),t("\n          "),a("span",{class:"token keyword"},"if"),a("span",{class:"token punctuation"},"("),t("preVNode"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token comment"},"// 获取前一个节点的下一个兄弟节点作为锚点"),t("\n            "),a("span",{class:"token keyword"},"const"),t(" anchor "),a("span",{class:"token operator"},"="),t(" preVNode"),a("span",{class:"token punctuation"},"."),t("el"),a("span",{class:"token punctuation"},"."),t("nextSibling\n            "),a("span",{class:"token comment"},"// 调用dom的insert方法"),t("\n            "),a("span",{class:"token function"},"insert"),a("span",{class:"token punctuation"},"("),t("newVNode"),a("span",{class:"token punctuation"},"."),t("el"),a("span",{class:"token punctuation"},","),t("container"),a("span",{class:"token punctuation"},","),t(" anchor"),a("span",{class:"token punctuation"},")"),t("\n          "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n          maxIndex "),a("span",{class:"token operator"},"="),t(" j\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token keyword"},"break"),a("span",{class:"token punctuation"},";"),t("\n      "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token punctuation"},"}"),t("\n  \n  "),a("span",{class:"token comment"},"// 遍历旧节点的set，然后卸载即可"),t("\n  oldChildrenSet"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"forEach"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"v"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token function"},"umount"),a("span",{class:"token punctuation"},"("),t("v"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t("\n  oldChildrenSet"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"clear"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1)];e.render=function(a,t,o,e,c,l){return n(),s("div",null,p)};export{o as __pageData,e as default};
